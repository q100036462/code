<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd">


	<!--安全管理器 -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<!--注入我们自定的realm -->
		<property name="realm" ref="shiroRealm" />
		<!--注入缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
		<!--注入会话管理器 -->
		<property name="sessionManager" ref="sessionManager" />
		<!--注入cookie管理器 -->
		<property name="rememberMeManager" ref="rememberMeManager" />
	</bean>

	<!--注入cookie管理器 -->
	<!-- rememberMeManager管理器 -->
	<bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
		<property name="cookie" ref="rememberMeCookie" />
	</bean>
	<!-- 记住我cookie -->
	<bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg value="rememberMe" />
		<!-- 记住我cookie生效时间30天 -->
		<property name="maxAge" value="2592000" />
	</bean>

	<!-- 会话管理器 -->
	<bean id="sessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<!-- session的失效时长，单位毫秒 -->
		<property name="globalSessionTimeout" value="600000" />
		<!-- 删除失效的session -->
		<property name="deleteInvalidSessions" value="true" />
	</bean>

	<!-- 缓存管理器 -->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager" />



	<!--自定的relam 从数据库访问用户的认证和授权信息 -->
	<bean id="shiroRealm" class="com.shiro.realm.ShiroRealm">
		<property name="credentialsMatcher" ref="credentialsMatcher" />
	</bean>

	<!-- 凭证管理器，设置密码的加密算法和规则 -->
	<bean id="credentialsMatcher"
		class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
		<property name="hashAlgorithmName" value="md5" />
		<property name="hashIterations" value="1024" />
	</bean>

	<!-- shiro过滤器 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />

		<!-- 如果配置了shiro配置文件，就会直接从shiroFilter中找到loginUrl的路径 然后根据路径进行跳转shiro所需要的登录页面 -->
		<property name="loginUrl" value="/login" />
		<!-- 没有权限跳转的地址 -->
		<property name="unauthorizedUrl" value="/noauth" />

		<!-- shiro过滤器配置 -->
		<property name="filters">
			<map>
				<entry key="authc" value-ref="formAuthenticationFilter" />
			</map>
		</property>
		<!-- 配置安全规则 -->
		<property name="filterChainDefinitions">
			<value>
				<!-- /login是在form表单中的提交地址，首先需要检测该用户是否处于认证状态，如果没有，自动进行认证 -->
				/login = authc
				<!-- 退出拦截，请求logout执行退出操作 -->
				/logout = logout
				<!-- 无权访问页面 -->
				/noauth = anon
				<!--静态资源可以直接诶访问 -->
				/static/** anon
				/validatecode.jsp anon
				/favicon.ico anon
				<!-- 
					因为shiro中有认证和授权两个阶段
						认证就是登陆
						user:所有的登录成功用户都可以进行访问，所有通过记住我登录成功的用户都可以进行访问
				 -->
				/** = user
			</value>
		</property>
	</bean>

	<!-- 基于Form表单的身份验证过滤器， 不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值 建议配置 -->
	<!-- 
		该过滤器只用于form表单，主要是用于控制form表单中的input标签的name属性
		<input type="text" name="username" />
		需要在property标签中声明出这个form表单的哪个input框才是获取username的
		<property name="usernameParam" value="username" />
		如果不进行配置，则使用shiro自带的默认值:username
		如果使用的是shiro的默认值，但是在input的name属性中配置的不是username的话，则shiro会报错找不到用户名
	 -->
	<bean id="formAuthenticationFilter" class="com.shiro.form.CustomAuthenticationFilter">
		<!-- 匹配form表中的用户名的name属性值 -->
		<property name="usernameParam" value="username" />
		<property name="passwordParam" value="password" />
		<property name="rememberMeParam" value="rememberMe" />
		<!-- 
		
			项目访问的时候，如果配置了过滤器
			1.会经过过滤器，如果过滤器放行，如果过滤器未通过，需要跳转到登录页面
			2.才会到shiroFilter(认证和授权)
			3.配置的loginUrl就是过滤器未通过需要跳转的页面
		
		 -->
		<property name="loginUrl" value="/login" />
	</bean>
</beans>